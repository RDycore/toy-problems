{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>Toy problems for RDycore</p>"},{"location":"code_verification/","title":"Code verification","text":""},{"location":"code_verification/#generating-meshes","title":"Generating meshes","text":"<p>Run <code>../share/meshes/generate_mesh_dam_break.m</code> and change dx = 100, 10, 5, 2, 1.</p>"},{"location":"code_verification/#run-simulations","title":"Run Simulations","text":"<pre><code>mpiexec -n 1 ./ex2b -save true -output_prefix dambreak5x10 -mesh ../share/meshes/DamBreak_grid5x10.exo -initial_condition ../share/initial_conditions/DamBreak_grid5x10_wetdownstream.IC -dt 0.1 -ts_max_time 72\nmpiexec -n 5 ./ex2b -save true -output_prefix dambreak50x100 -mesh ../share/meshes/DamBreak_grid50x100.exo -initial_condition ../share/initial_conditions/DamBreak_grid50x100_wetdownstream.IC -dt 0.1 -ts_max_time 72\nmpiexec -n 5 ./ex2b -save true -output_prefix dambreak100x200 -mesh ../share/meshes/DamBreak_grid100x200.exo -initial_condition ../share/initial_conditions/DamBreak_grid100x200_wetdownstream.IC -dt 0.1 -ts_max_time 72\nmpiexec -n 10 ./ex2b -save true -output_prefix dambreak250x500 -mesh ../share/meshes/DamBreak_grid250x500.exo -initial_condition ../share/initial_conditions/DamBreak_grid250x500_wetdownstream.IC -dt 0.1 -ts_max_time 72\nmpiexec -n 40 ./ex2b -save true -output_prefix dambreak500x1000 -mesh ../share/meshes/DamBreak_grid500x1000.exo -initial_condition ../share/initial_conditions/DamBreak_grid500x1000_wetdownstream.IC -dt 0.1 -ts_max_time 72\n</code></pre>"},{"location":"code_verification/#run-mms-simulations","title":"Run MMS simulations","text":"<pre><code>suffixes=(\"1\" \"0.5\" \"0.25\" \"0.1\" \"0.05\")\nfor suffix in \"${suffixes[@]}\"\ndo\n  ./ex2b_MMS \\\n  -savef true \\\n  -output_prefix MMS_dx${suffix} \\\n  -mesh ../share/meshes/ex2b_MMS_mesh_dx${suffix}.exo \\\n  -dt 0.01 \\\n  -ts_max_time 5.0 \\\n  -ts_exact_final_time matchstep\ndone\n</code></pre>"},{"location":"code_verification/#run-validation-cases","title":"Run validation cases","text":"<p>C property (immersed bump) <pre><code>mpiexec -n 40 ./ex2b_validation -savef true -output_prefix ex2b_c_property_immersed -mesh ../share/meshes/ex2b_c_property_immersed.exo -initial_condition ../share/initial_conditions/ex2b_c_property_immersed.IC -mannings_n 0 -dt 0.0001 -ts_max_time 20 -caseid 1.1\n</code></pre> C property (emerged bump) <pre><code>mpiexec -n 40 ./ex2b_validation -savef true -output_prefix ex2b_c_property_emerged -mesh ../share/meshes/ex2b_c_property_emerged.exo -initial_condition ../share/initial_conditions/ex2b_c_property_emerged.IC -mannings_n 0 -dt 0.0001 -ts_max_time 20 -caseid 1.2\n</code></pre></p> <p>Well balancing (subcritical to supercritical) <pre><code>mpiexec -n 20 ./ex2b_validation -savef true -output_prefix ex2b_well_balancing_sub_to_super -mesh ../share/meshes/ex2b_well_balancing_sub_to_super.exo -initial_condition ../share/initial_conditions/ex2b_well_balancing_sub_to_super.IC -mannings_n 0.0218 -dt 0.01 -ts_max_time 3000 -caseid 2.1\n</code></pre> Well balancing (supercritical to subcritical) <pre><code>mpiexec -n 20 ./ex2b_validation -savef true -output_prefix ex2b_well_balancing_super_to_sub -mesh ../share/meshes/ex2b_well_balancing_super_to_sub.exo -initial_condition ../share/initial_conditions/ex2b_well_balancing_super_to_sub.IC -mannings_n 0.0218 -dt 0.01 -ts_max_time 3000 -caseid 2.2\n</code></pre></p> <p>Dam break (wet domain) <pre><code>mpiexec -n 2 ./ex2b_validation -savef true -output_prefix ex2b_dam_break_wet_domain_dx0.1 -mesh ../share/meshes/ex2b_dam_break_wet_domain_dx0.1.exo -initial_condition ../share/initial_conditions/ex2b_dam_break_wet_domain_dx0.1.IC -mannings_n 0 -dt 0.001 -ts_max_time 6 -caseid 3.1\nmpiexec -n 4 ./ex2b_validation -savef true -output_prefix ex2b_dam_break_wet_domain_dx0.01 -mesh ../share/meshes/ex2b_dam_break_wet_domain_dx0.01.exo -initial_condition ../share/initial_conditions/ex2b_dam_break_wet_domain_dx0.01.IC -mannings_n 0 -dt 0.001 -ts_max_time 6 -caseid 3.1\nmpiexec -n 8 ./ex2b_validation -savef true -output_prefix ex2b_dam_break_wet_domain_dx0.001 -mesh ../share/meshes/ex2b_dam_break_wet_domain_dx0.001.exo -initial_condition ../share/initial_conditions/ex2b_dam_break_wet_domain_dx0.001.IC -mannings_n 0 -dt 0.001 -ts_max_time 6 -caseid 3.1\nmpiexec -n 40 ./ex2b_validation -savef true -output_prefix ex2b_dam_break_wet_domain_dx0.0001 -mesh ../share/meshes/ex2b_dam_break_wet_domain_dx0.0001.exo -initial_condition ../share/initial_conditions/ex2b_dam_break_wet_domain_dx0.0001.IC -mannings_n 0 -dt 0.0001 -ts_max_time 6 -caseid 3.1\n</code></pre> Dam break (dry domain) <pre><code>mpiexec -n 2 ./ex2b_validation -savef true -output_prefix ex2b_dam_break_dry_domain_dx0.1 -mesh ../share/meshes/ex2b_dam_break_dry_domain_dx0.1.exo -initial_condition ../share/initial_conditions/ex2b_dam_break_dry_domain_dx0.1.IC -mannings_n 0 -dt 0.001 -ts_max_time 6 -caseid 3.2\nmpiexec -n 4 ./ex2b_validation -savef true -output_prefix ex2b_dam_break_dry_domain_dx0.01 -mesh ../share/meshes/ex2b_dam_break_dry_domain_dx0.01.exo -initial_condition ../share/initial_conditions/ex2b_dam_break_dry_domain_dx0.01.IC -mannings_n 0 -dt 0.001 -ts_max_time 6 -caseid 3.2\nmpiexec -n 20 ./ex2b_validation -savef true -output_prefix ex2b_dam_break_dry_domain_dx0.001 -mesh ../share/meshes/ex2b_dam_break_dry_domain_dx0.001.exo -initial_condition ../share/initial_conditions/ex2b_dam_break_dry_domain_dx0.001.IC -mannings_n 0 -dt 0.0001 -ts_max_time 6 -caseid 3.2\nmpiexec -n 40 ./ex2b_validation -savef true -output_prefix ex2b_dam_break_dry_domain_dx0.0001 -mesh ../share/meshes/ex2b_dam_break_dry_domain_dx0.0001.exo -initial_condition ../share/initial_conditions/ex2b_dam_break_dry_domain_dx0.0001.IC -mannings_n 0 -dt 0.00005 -ts_max_time 6 -caseid 3.2\n</code></pre></p> <p>Analytical oscillation: parabolic bowl, radially_symmetrical <pre><code>mpiexec -n 40 ./ex2b_validation -savef true -output_prefix ex2b_parabolic_bowl_radially_symmetrical_T4 -mesh ../share/meshes/ex2b_parabolic_bowl_radially_symmetrical.exo -initial_condition ../share/initial_conditions/ex2b_parabolic_bowl_radially_symmetrical.IC -mannings_n 0 -dt 0.001 -ts_max_time 0.56 -caseid 4.1 # T/4\nmpiexec -n 40 ./ex2b_validation -savef true -output_prefix ex2b_parabolic_bowl_radially_symmetrical_T2 -mesh ../share/meshes/ex2b_parabolic_bowl_radially_symmetrical.exo -initial_condition ../share/initial_conditions/ex2b_parabolic_bowl_radially_symmetrical.IC -mannings_n 0 -dt 0.001 -ts_max_time 1.121 -caseid 4.1 # T/2\nmpiexec -n 40 ./ex2b_validation -savef true -output_prefix ex2b_parabolic_bowl_radially_symmetrical_T -mesh ../share/meshes/ex2b_parabolic_bowl_radially_symmetrical.exo -initial_condition ../share/initial_conditions/ex2b_parabolic_bowl_radially_symmetrical.IC -mannings_n 0 -dt 0.001 -ts_max_time 2.243 -caseid 4.1 # T\nmpiexec -n 40 ./ex2b_validation -savef true -output_prefix ex2b_parabolic_bowl_radially_symmetrical_2T -mesh ../share/meshes/ex2b_parabolic_bowl_radially_symmetrical.exo -initial_condition ../share/initial_conditions/ex2b_parabolic_bowl_radially_symmetrical.IC -mannings_n 0 -dt 0.001 -ts_max_time 4.486 -caseid 4.1 # 2T\n</code></pre></p> <p>Analytical oscillation: parabolic bowl, planar_surface <pre><code>mpiexec -n 40 ./ex2b_validation -savef true -output_prefix ex2b_parabolic_bowl_planar_surface_T4 -mesh ../share/meshes/ex2b_parabolic_bowl_planar_surface.exo -initial_condition ../share/initial_conditions/ex2b_parabolic_bowl_planar_surface.IC -mannings_n 0 -dt 0.0001 -ts_max_time 1.1214 -caseid 4.2 # T/4\nmpiexec -n 40 ./ex2b_validation -savef true -output_prefix ex2b_parabolic_bowl_planar_surface_T2 -mesh ../share/meshes/ex2b_parabolic_bowl_planar_surface.exo -initial_condition ../share/initial_conditions/ex2b_parabolic_bowl_planar_surface.IC -mannings_n 0 -dt 0.0001 -ts_max_time 2.2429 -caseid 4.2 # T/2\nmpiexec -n 40 ./ex2b_validation -savef true -output_prefix ex2b_parabolic_bowl_planar_surface_T -mesh ../share/meshes/ex2b_parabolic_bowl_planar_surface.exo -initial_condition ../share/initial_conditions/ex2b_parabolic_bowl_planar_surface.IC -mannings_n 0 -dt 0.0001 -ts_max_time 4.4857 -caseid 4.2 # T\nmpiexec -n 40 ./ex2b_validation -savef true -output_prefix ex2b_parabolic_bowl_planar_surface_2T -mesh ../share/meshes/ex2b_parabolic_bowl_planar_surface.exo -initial_condition ../share/initial_conditions/ex2b_parabolic_bowl_planar_surface.IC -mannings_n 0 -dt 0.0001 -ts_max_time 8.9714 -caseid 4.2 # 2T\n</code></pre></p> <p>Malpasset Dam break (TELEMAC grid) <pre><code>mpiexec -n 160 ./ex2b_validation -savef true -output_prefix ex2b_malpasset_telemac -mesh ../share/meshes/ex2b_malpasset_telemac.exo -initial_condition ../share/initial_conditions/ex2b_malpasset_telemac.IC -mannings_n 0.033 -dt 0.001 -ts_max_time 4000 -caseid 5.1\n</code></pre> Malpasset Dam break (PIHM grid) <pre><code>mpiexec -n 160 ./ex2b_validation -savef true -output_prefix ex2b_malpasset_pihm -mesh ../share/meshes/ex2b_malpasset_pihm.exo -initial_condition ../share/initial_conditions/ex2b_malpasset_pihm.IC -mannings_n 0.033 -dt 0.001 -ts_max_time 4000 -caseid 5.2\n</code></pre></p>"},{"location":"code_verification/#run-mms-simulations-for-swe-and-sediment","title":"Run MMS simulations for SWE and sediment","text":"<pre><code>suffixes=(\"1\" \"0.5\" \"0.25\" \"0.1\" \"0.05\")\nfor suffix in \"${suffixes[@]}\"\ndo\n  mpiexec -n 2 \\\n  ./ex2d_MMS \\\n  -savef true \\\n  -output_prefix MMS_dx${suffix} \\\n  -mesh ../share/meshes/ex2b_MMS_mesh_dx${suffix}.exo \\\n  -sed 1 \\\n  -dt 0.01 \\\n  -ts_max_time 5.0\ndone\n</code></pre>"},{"location":"sediment_equation/","title":"Sediment equation","text":""},{"location":"sediment_equation/#governing-equations","title":"Governing equations","text":""},{"location":"sediment_equation/#2-d-h-r-equation","title":"2-D H-R equation","text":"<p>The 2-D H-R equations are</p> \\[\\begin{equation} \\label{eqn:hr2d} \\frac{\\partial hc_{i}}{\\partial t}+\\frac{\\partial uhc_{i}}{\\partial x} + \\frac{\\partial vhc_{i}}{\\partial y} = e_{i} + e_{ri} + r_{i} + r_{ri} - d_{i}, \\end{equation}\\] \\[\\begin{equation} \\frac{\\partial M_{i}}{\\partial t} = d_{i} - e_{ri} - r_{ri}, \\end{equation}\\] \\[\\begin{equation} (1-\\beta)\\rho_{s}\\frac{\\partial z_{b}}{\\partial t} = \\sum_{i=1}^{I}(d_{i}-e_{i}-e_{ri}-r_{i}-r_{ri}), \\end{equation}\\] <p>where \\(i = 1, 2, \\dots I\\), \\(c_{i}\\) is the sediment concentration given as mass per unit volume \\([M/L^{3}]\\),  \\(M_{i}\\) is the sediment mass of the deposited layer formulated as mass per unit area \\([M/L^{2}]\\),  \\(I\\) is the number of sediment size classes, and \\(e_{i}, e_{ri}, r_{i}, r_{ri}\\), and \\(d_{i}\\) are rainfall-driven detachment and redetachment rates, flow-induced entrainment and reentrainment rates, and the deposition rate  formulated as mass per unit area per unit time \\([M/L^{2}/T]\\). \\(\\beta\\) is the porosity of original soil and \\(\\rho_{s}\\) is the density of solids assumed to be uniform for all sediment classes. According to [Hairsine and Rose, 1992], the detachment and redetachment rates due to rainfall are calculated as  following: \\begin{equation} e_{i} = F_{w}(1-H)p_{i}a_{0}P, \\end{equation} \\begin{equation} e_{ri} = F_{w}H\\frac{M_{i}}{M_{t}}a_{d}P, \\end{equation} where \\(p_{i}\\) is the ratio of the amount of sediment of class \\(i\\) to that of the original soil, \\(a_{0}\\) and \\(a_{d}\\)  represent detachability of uneroded and deposited soil as mass per unit volume \\([M/L^{3}]\\), P is rallfall intensity \\([L/T]\\), and \\(M_{t} = \\sum M_{i}\\) is the total sediment mass in the deposited layer in mass per unit area \\([M/L^2]\\)/. \\(F_{w}\\) is the shield factor, which can be formulated with the power law relation by Proffitt et al. [1991]:</p> \\[\\begin{equation} F_{w}=\\begin{cases}        1             \\quad &amp; h \\le h_{0} \\\\        (h_{0}/h)^{b} \\quad &amp; h &gt; h_{0}   \\\\        \\end{cases} \\end{equation}\\] <p>where a threshold of \\(h_{0} = 0.33D_{R}\\) is used, and \\(D_{R}\\) is the mean raindrop size. The exponent b varies depending on the  type of soil and can be obtained with a best fit using experimental data,  e.g., for clay, \\(b=0.66\\), and for loam, \\(b=1.13\\). \\(H\\) is the proportion of shielding of the deposited layer: \\begin{equation} H = min(M_{t}/(F_{w}M_{t}^{}),1) \\end{equation} where \\(M_{t}^{*}\\) is a calibrated parameter denoting the mass of deposited sediment needed to completely sheild and original soil,  given as mass per unit area \\([M/L^{2}]\\). The entrainment and reentrainment rates due to overland flow can be estimated by: \\begin{equation} r_{i} = (1-H)p_{i}\\frac{F(\\Omega-\\Omega_{cr})}{J} \\end{equation} \\begin{equation} r_{ri} = H\\frac{M_{i}}{M_{t}}\\frac{F(\\Omega - \\Omega_{cr})}{(\\rho_{s}-\\rho_{w})gh/\\rho_{s}} \\end{equation} where \\(\\Omega\\) is the stream power in units of \\([M/^{3}]\\): \\begin{equation} \\Omega = \\rho_{w}ghS_{f}\\sqrt{u^2+v^2} \\end{equation} \\begin{equation} S_{f} = n^{2}(u^{2}+v^{2})h^{-4/3} \\end{equation} and \\(\\Omega_{cr}\\) is the critical stream power, below which soil entrainment or reentrainment do not occur. \\(F\\) is the effective fraction of excess stream power in entrainment or reentrainment to account for energy dissipation due to heat. \\(J\\) is the specific energy of entrainment, for example, the energy required for soil to be entrained per unit mass of sediment \\([ML^{2}/T^{2}/M]\\). \\(\\rho_{w}\\) is the density of water. The deposition rate for a sediment class \\(i\\) can be calculated as: \\begin{equation} d_{i} = v_{i}c_{i} \\end{equation} where \\(v_{i}\\) represents the settling velocity of each sediment class \\([L/T]\\). Please note the assumptions behind this equation:</p> <pre><code>*   The suspended load in the water column is completely mixed in the vertical direction.\n*   Infiltration rate does not affect settling velocities.\n</code></pre> <p>Coupling H-R equation with Shallow Water Equations lead to:</p> \\[\\begin{eqnarray} \\label{eqn:cpeqns} \\frac{\\partial \\mathbf{U}}{\\partial t} + \\frac{\\partial \\mathbf{E}}{\\partial t} + \\frac{\\partial \\mathbf{G}}{\\partial t} &amp;=&amp; \\mathbf{S}\\\\ \\frac{\\partial \\mathbf{M}}{\\partial t} &amp;=&amp; \\mathbf{D} \\end{eqnarray}\\] <p>where \\(\\mathbf{U}\\) is the conservative variable vector, \\(\\mathbf{E}\\) and \\(\\mathbf{G}\\) are the flux vectors in x and y direction, respectively,  \\(\\mathbf{S}\\) is the source vector, \\(\\mathbf{M}\\) is a deposited mass vector, and \\(\\mathbf{D}\\) is the net deposition vector:</p> \\[\\begin{align} \\mathbf{U}  =     \\begin{bmatrix}     h      \\\\[.5em]     uh     \\\\[.5em]     vh     \\\\     c_{1}h \\\\     \\vdots \\\\     c_{I}h     \\end{bmatrix} \\end{align}\\] \\[\\begin{align} \\mathbf{E}  =     \\begin{bmatrix}     uh                           \\\\[.5em]     u^{2}h+\\frac{1}{2}gh^{2}     \\\\[.5em]     uvh                          \\\\     c_{1}uh                      \\\\     \\vdots                       \\\\     c_{I}uh     \\end{bmatrix} \\end{align}\\] \\[\\begin{align} \\mathbf{G}  =     \\begin{bmatrix}     vh                           \\\\[.5em]     uvh                          \\\\[.5em]     v^{2}h+\\frac{1}{2}gh^{2}     \\\\     c_{1}vh                      \\\\     \\vdots                       \\\\     c_{I}vh     \\end{bmatrix} \\end{align}\\] \\[\\begin{align} \\mathbf{S}  =     \\begin{bmatrix}     S_{r}                                                           \\\\[.5em]     -gh\\frac{\\partial z_{b}}{\\partial x} - C_{D}u\\sqrt{u^{2}+v^{2}} \\\\[.5em]     -gh\\frac{\\partial z_{b}}{\\partial y} - C_{D}v\\sqrt{u^{2}+v^{2}} \\\\     e_{1}+e_{r1}+r_{1}+r_{r1}-d_{1}                                 \\\\     \\vdots                                                          \\\\     e_{I}+e_{rI}+r_{I}+r_{rI}-d_{I}      \\end{bmatrix} \\end{align}\\] \\[\\begin{align} \\mathbf{M}  =     \\begin{bmatrix}     M_{1}    \\\\[.5em]     \\vdots   \\\\     M_{I}      \\end{bmatrix} \\end{align}\\] \\[\\begin{align} \\mathbf{D}      =     \\begin{bmatrix}     d_{1}-e_{r1}-r_{r1} \\\\[.5em]     \\vdots              \\\\     d_{I}-e_{rI}-r_{rI}       \\end{bmatrix} \\end{align}\\]"},{"location":"sediment_equation/#telemacgaia-equations","title":"TELEMAC/GAIA equations","text":"<p>The sediment transport equations implemented in TELEMAC/GAIA are</p> \\[\\begin{equation} \\label{eqn:sd2d} \\frac{\\partial hc_{i}}{\\partial t}+\\frac{\\partial uhc_{i}}{\\partial x} + \\frac{\\partial vhc_{i}}{\\partial y} = E_{i} - D_{i}, \\end{equation}\\] <p>where \\(h\\), \\(u\\) and \\(v\\) are water depth, velocities in horizontal and vertical directions, respectively, \\(i = 1, 2, \\dots I\\) is the sediment class, \\(c_{i}\\) is the sediment concentration given as mass per unit volume \\([M/L^{3}]\\),  \\(I\\) is the number of sediment size classes, and \\(E_{i}\\) and \\(D_{i}\\) are erosion and deposition rate formulated as mass per unit area per unit time \\([M/L^{2}/T]\\).</p> <p>According to GAIA, the erosion and deposition rates are calculated as: \\begin{equation} E_i = M \\left( \\frac{\\tau_b - \\tau_{ce}}{\\tau_{ce}} \\right), \\end{equation} \\begin{equation} D_i = w c_i \\left[ 1 - \\left( \\frac{\\tau_b}{\\tau_{cd}} \\right) \\right], \\end{equation}</p> <p>where, for each sediment class \\(i\\), \\(M\\) is the Krone-Partheniades erosion law constant [kg/m\\(^{2}\\)], or the erodibility coefficient, \\(w\\) is the settling velocity for sediment class \\(i\\) (m/s), \\(\\tau_{ce}\\) is critical shear stress for erosion (N/m\\(^2\\)), \\(\\tau_{cd}\\) is critical shear stress for deposition (N/m\\(^2\\)), \\(\\tau_b = 0.5 \\rho C_D (u^2+v^2)\\) is the bottom shear stress. </p> <p>Coupling sediment transport equation with Shallow Water Equations lead to:</p> \\[\\begin{equation} \\frac{\\partial \\mathbf{U}}{\\partial t} + \\frac{\\partial \\mathbf{E}}{\\partial t} + \\frac{\\partial \\mathbf{G}}{\\partial t} = \\mathbf{S}, \\end{equation}\\] <p>where \\(\\mathbf{U}\\) is the conservative variable vector, \\(\\mathbf{E}\\) and \\(\\mathbf{G}\\) are the flux vectors in x and y direction. \\(\\mathbf{U}\\), \\(\\mathbf{E}\\) and \\(\\mathbf{G}\\) are same as those in 2-D H-R equation. \\(\\mathbf{S}\\) is the source vector:</p> \\[\\begin{align} \\mathbf{S}  =     \\begin{bmatrix}     S_{r}                                                           \\\\[.5em]     -gh\\frac{\\partial z_{b}}{\\partial x} - C_{D}u\\sqrt{u^{2}+v^{2}} \\\\[.5em]     -gh\\frac{\\partial z_{b}}{\\partial y} - C_{D}v\\sqrt{u^{2}+v^{2}} \\\\     E_{1}-D_{1}                                 \\\\     \\vdots                                                          \\\\     E_{I}-D_{I}      \\end{bmatrix} \\end{align}\\]"},{"location":"sediment_equation/#spatial-discretization","title":"Spatial discretization","text":"<p>Integrating equation Eq (\\ref{eqn:cpeqns}) over an arbitrary two-dimensional computational element \\(A\\) with a boundary \\(\\Gamma\\), then the  governing equations expressed in conservation form can be written as follows:</p> \\[\\begin{equation} \\frac{\\partial}{\\partial t}\\int_{A}\\mathbf{U}dA + \\oint_{\\Gamma}\\mathbf{F} \\cdot \\mathbf{n}d\\Gamma = \\iint_{A}\\mathbf{S}dA, \\end{equation}\\] <p>where \\(\\mathbf{F}\\) is the flux vector, and \\(\\mathbf{n}\\) is the unit vector normal to boundary \\(\\partial \\Gamma\\) and directed outward. The  integrand \\(\\mathbf{F} \\cdot \\mathbf{n} = F_{\\perp}\\) is the numerical flux normal to each cell face and defined as:</p> \\[\\begin{align} \\label{eqn:flux} \\mathbf{F} \\cdot \\mathbf{n}  =     \\begin{bmatrix}     hu_{\\perp}                                                                      \\\\[.5em]     huu_{\\perp} + \\frac{1}{2}gh^{2}cos \\theta + \\frac{1}{24}g\\Delta h^{2}cos \\theta \\\\     hvu_{\\perp} + \\frac{1}{2}gh^{2}sin \\theta + \\frac{1}{24}g\\Delta h^{2}sin \\theta \\\\     hc_{1}u_{\\perp}                                                                 \\\\     \\vdots                                                                          \\\\     hc_{I}u_{\\perp}                                                                 \\\\     \\end{bmatrix} \\end{align}\\] <p>where \\(u_{\\perp}\\) denotes the velocity normal to the cell interface and computed as \\(u_{\\perp}=ucos \\theta + vsin \\theta\\), and \\(\\theta\\) is an  angle between the face normal vector and the x axis, \\(\\Delta h\\) is a variation of \\(h\\) along the cell face. The last terms in the second and third rows of equation (\\ref{eqn:flux}) are the hydrostatic thrust correction terms suggested by Bradford and Sanders [2002]. The are necessary to balance  the bed slope terms for the still water condition.</p> <p>Roe's approximate Riemann solver [Roe, 1981] is implemented to compute the fluxes at the cell interface:</p> \\[\\begin{equation} \\mathbf{F} \\cdot \\mathbf{n} \\approx \\mathbf{F}_{\\perp,f} =  \\frac{1}{2} \\left(\\mathbf{F}_{\\perp,L} + \\mathbf{F}_{\\perp,R}-\\mathbf{\\hat{R}} |\\mathbf{\\hat{\\Lambda}}| \\mathbf{\\Delta\\hat{V}} \\right) \\end{equation}\\] <p>where the subscript \\(f\\) denotes the interface between two adjacent cells, \\(L\\) and \\(R\\) denote left and right cell for the interface, and \\(\\Delta\\)  denotes the finite difference across the interface. The terms \\(\\mathbf{\\hat{R}}\\) and \\(\\mathbf{\\hat{\\Lambda}}\\) are the right eigenvector and the  eigenvalue of the Jacobian of \\(\\mathbf{F}_{\\perp}\\), and \\(\\mathbf{\\Delta}\\mathbf{\\hat{V}}=\\hat{L}\\Delta U\\), denotes the wave strength, where \\(\\hat{L}\\)  is the left eigenvector of the Jacobian of \\(\\mathbf{F}_{\\perp}\\):</p> \\[\\begin{align} \\mathbf{\\hat{R}} =     \\begin{bmatrix}     1                         &amp; 0           &amp; 1                         &amp; 0      &amp; \\ldots &amp; 0      \\\\     \\hat{u}-\\hat{a}cos \\theta &amp; -sin \\theta &amp; \\hat{u}+\\hat{a}cos \\theta &amp; 0      &amp; \\ldots &amp; 0      \\\\     \\hat{v}-\\hat{a}sin \\theta &amp;  cos \\theta &amp; \\hat{v}+\\hat{a}sin \\theta &amp; 0      &amp; \\ldots &amp; 0      \\\\     \\hat{c_{1}}               &amp; 0           &amp; \\hat{c_{1}}               &amp; 1      &amp; \\ldots &amp; 0      \\\\     \\vdots                    &amp; \\vdots      &amp; \\vdots                    &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\      \\hat{c_{I}}               &amp; 0           &amp; \\hat{c_{I}}               &amp; 0      &amp; \\ldots &amp; 1      \\\\     \\end{bmatrix} \\end{align}\\] \\[\\begin{align} \\mathbf{\\hat{\\Lambda}} =     \\begin{bmatrix}     |\\hat{u_{\\perp}}-\\hat{a}|^{*} &amp;                   &amp;                               &amp;                   &amp;        &amp;                   \\\\                                   &amp; |\\hat{u_{\\perp}}| &amp;                               &amp;                   &amp;        &amp;                   \\\\                                   &amp;                   &amp; |\\hat{u_{\\perp}}+\\hat{a}|^{*} &amp;                   &amp;        &amp;                   \\\\                                   &amp;                   &amp;                               &amp; |\\hat{u_{\\perp}}| &amp;        &amp;                   \\\\                                   &amp;                   &amp;                               &amp;                   &amp; \\ddots &amp;                   \\\\                                   &amp;                   &amp;                               &amp;                   &amp;        &amp; |\\hat{u_{\\perp}}| \\\\     \\end{bmatrix} \\end{align}\\] \\[\\begin{align} \\mathbf{\\Delta}\\mathbf{\\hat{V}}=\\hat{L}\\Delta U =     \\begin{bmatrix}     \\frac{1}{2} \\left( \\Delta h - \\frac{\\hat{h}\\Delta u_\\perp}{\\hat{a}} \\right) \\\\[.5em]     \\hat{h}u_\\parallel                                                          \\\\[.5em]     \\frac{1}{2} \\left( \\Delta h + \\frac{\\hat{h}\\Delta u_\\perp}{\\hat{a}} \\right) \\\\[.5em]     (c_{1}h)_{R} - (c_{1}h)_{L} - \\hat{c_{1}}(h_{R}-h_{L})                      \\\\[.5em]     \\vdots                                                                      \\\\[.5em]     (c_{I}h)_{R} - (c_{I}h)_{L} - \\hat{c_{I}}(h_{R}-h_{L})                      \\\\[.5em]     \\end{bmatrix} \\end{align}\\] <p>where \\(a\\) denotes the celerity of a simple gravity wave, \\(u_{\\parallel}\\) denotes the vecloty components parallel to the cell interface and can be  computed as:</p> \\[\\begin{equation} u_{\\parallel} = -usin \\theta + vcos \\theta \\end{equation}\\] <p>The quantities with a hat denote the Roe averages, whch are calculated as the following:</p> \\[\\begin{eqnarray} \\hat{h}     &amp;=&amp; \\sqrt{h_{L}h_{R}}                                                     \\\\ \\hat{u}     &amp;=&amp; \\frac{\\sqrt{h_{L}}u_{L}+\\sqrt{h_{R}}u_{R}}{\\sqrt{h_{L}}+\\sqrt{h_{R}}} \\\\ \\hat{v}     &amp;=&amp; \\frac{\\sqrt{h_{L}}v_{L}+\\sqrt{h_{R}}v_{R}}{\\sqrt{h_{L}}+\\sqrt{h_{R}}} \\\\ \\hat{a}     &amp;=&amp; \\sqrt{\\frac{g}{2}(h_{L}+h_{R})}                                       \\\\ \\hat{c_{i}} &amp;=&amp; \\frac{\\sqrt{h_{L}}c_{i,L}+\\sqrt{h_{R}}c_{i,R}}{\\sqrt{h_{L}}+\\sqrt{h_{R}}}  \\end{eqnarray}\\] <p>The asterisks denote that the eigenvalues \\(\\hat{\\lambda}_{1}=\\hat{u}_{\\perp}-\\hat{a}\\) and \\(\\hat{\\lambda}_{3}=\\hat{u}_{\\perp}+\\hat{a}\\) are adjusted since Roe's  method does not provide correct flux for critical flow :</p> \\[\\begin{equation} |\\hat{\\lambda}_{1}|^{*} = \\frac{\\hat{\\lambda}_{1}^{2}}{\\Delta \\lambda} + \\frac{\\Delta \\lambda}{4} \\quad if \\quad -\\Delta \\lambda /2 &lt; \\hat{\\lambda}_{1} &lt; \\Delta \\lambda /2 \\end{equation}\\] \\[\\begin{equation} |\\hat{\\lambda}_{3}|^{*} = \\frac{\\hat{\\lambda}_{3}^{2}}{\\Delta \\lambda} + \\frac{\\Delta \\lambda}{4} \\quad if \\quad -\\Delta \\lambda /2 &lt; \\hat{\\lambda}_{3} &lt; \\Delta \\lambda /2 \\end{equation}\\] <p>where \\(\\Delta \\lambda = 4(\\lambda_{R}-\\lambda_{L})\\)</p>"},{"location":"sediment_equation/#source-term","title":"Source term","text":"<p>Please refer to shallow_water_equation.md. The H-R sediment source is</p> \\[\\begin{equation} (e_{i}+e_{ri}+r_{i}+r_{ri}-d_{i})A \\end{equation}\\] <p>The sediment source in GAIA is  \\begin{equation} (E_{i}-D_{i})A \\end{equation}</p>"},{"location":"shallow_water_equation/","title":"Shallow water equation","text":""},{"location":"shallow_water_equation/#governing-equations","title":"Governing equations","text":"<p>The shallow water equations are given by</p> \\[\\begin{equation} \\label{eqn:swe} \\frac{\\partial\\mathbf{U}}{\\partial t} + \\frac{\\partial \\mathbf{E}}{\\partial x} + \\frac{\\partial \\mathbf{G}}{\\partial y} = \\mathbf{S} \\end{equation}\\] <p>where </p> \\[\\begin{align}   \\mathbf{U}   =   \\begin{bmatrix}   h \\\\[.5em]   hu \\\\[.5em]   hv   \\end{bmatrix} \\end{align}\\] \\[\\begin{align}   \\mathbf{E}   =   \\begin{bmatrix}   hu \\\\[.5em]   hu^2 + \\frac{1}{2}gh^2 \\\\[.5em]   huv   \\end{bmatrix} \\end{align}\\] \\[\\begin{align}   \\mathbf{G}   =   \\begin{bmatrix}   hv \\\\[.5em]   huv \\\\[.5em]   hv^2 + \\frac{1}{2}gh^2   \\end{bmatrix} \\end{align}\\] \\[\\begin{align}   \\mathbf{S}   =   \\begin{bmatrix}   Q_i \\\\[.5em]   -gh\\frac{\\partial z}{\\partial x} - C_D u \\sqrt{u^2 + v^2}\\\\[.5em]   -gh\\frac{\\partial z}{\\partial y} - C_D v \\sqrt{u^2 + v^2}   \\end{bmatrix} \\end{align}\\] <p>\\(h\\) is the flow depth, \\(u\\) is the vertically-averaged velocity in x-direction, \\(v\\) is the vertically-averaged velocity in x-direction, \\(z\\) is the bed elevation, \\(C_D = g n^2/h^\\frac{1}{3}\\) is the drag coefficient, and \\(n\\) is the Manning's coefficient.</p>"},{"location":"shallow_water_equation/#spatial-discretization","title":"Spatial discretization","text":"\\[\\begin{eqnarray} \\frac{\\partial}{\\partial t} \\int_\\Omega \\mathbf{U} d\\Omega +  \\int_\\Omega \\frac{\\partial\\mathbf{E}}{\\partial x}  d\\Omega +  \\int_\\Omega \\frac{\\partial\\mathbf{G}}{\\partial y}  d\\Omega +  &amp;=&amp; \\int_\\Omega \\mathbf{S} d\\Omega \\nonumber\\\\ \\frac{\\partial}{\\partial t} \\int_\\Omega \\mathbf{U} d\\Omega +  \\oint_{d\\Omega} \\left( \\mathbf{E}dy  - \\mathbf{G} dx \\right) &amp;=&amp; \\int_\\Omega \\mathbf{S} d\\Omega \\nonumber\\\\  \\frac{\\partial}{\\partial t} \\int_\\Omega \\mathbf{U} d\\Omega +  \\int_{d\\Omega} \\left( \\mathbf{F} . \\mathbf{n} \\right) ds +  &amp;=&amp; \\int_\\Omega \\mathbf{S} d\\Omega \\end{eqnarray}\\] <p>where \\(\\mathbf{F}\\) is the flux vector and \\(\\mathbf{n}\\) is the outward pointing unit vector to the boundary \\(\\partial\\Omega\\).  The flux normal flux across the face, \\(\\mathbf{F.n}\\), is given by</p> \\[\\begin{align}   \\mathbf{F.n}   =   \\begin{bmatrix}   hu_\\perp  \\\\[.5em]   huu_\\perp + \\frac{1}{2}gh^2 \\cos\\phi + \\frac{1}{24}g\\left(\\Delta h\\right)^2\\cos\\phi\\\\[.5em]   hvu_\\perp + \\frac{1}{2}gh^2 \\sin\\phi + \\frac{1}{24}g\\left(\\Delta h\\right)^2\\sin\\phi   \\end{bmatrix} \\end{align}\\] <p>where \\(u_\\perp\\) is the velocity perpendicular to the face given by \\(u \\cos\\phi + v \\sin\\phi\\) and \\(\\phi\\) is the angle between the face normal and the x axis.</p>"},{"location":"shallow_water_equation/#interface-flux","title":"Interface flux","text":"<p>The interface flux, \\(\\mathbf{F}_\\perp\\), at the face shared by cell \\(i\\) and \\(j\\) are evaluated using Roe's method as </p> \\[\\begin{equation} \\mathbf{F.n} \\approx \\mathbf{F}_\\perp^{i,j} = \\frac{1}{2} \\left( \\mathbf{F}_\\perp^{i} + \\mathbf{F}_\\perp^{j} - \\mathbf{\\hat{R}} |\\mathbf{\\hat{\\Lambda}| \\mathbf{\\Delta}\\hat{V}} \\right) \\end{equation}\\] <p>where</p> \\[\\begin{align}   \\mathbf{R}   =   \\begin{bmatrix}   1 &amp; 0 &amp; 1  \\\\[.5em]   \\hat{u} - \\hat{a}\\cos\\phi &amp; -\\sin\\phi &amp; \\hat{u} + \\hat{a}\\cos\\phi  \\\\[.5em]   \\hat{v} - \\hat{a}\\sin\\phi &amp;  \\cos\\phi &amp; \\hat{v} + \\hat{a}\\sin\\phi   \\end{bmatrix} \\end{align}\\] \\[\\begin{align}   \\mathbf{\\Delta\\hat{V}}   =   \\begin{bmatrix}   \\frac{1}{2} \\left( \\Delta h - \\frac{\\hat{h}\\Delta u_\\perp}{\\hat{a}} \\right) \\\\[.5em]   \\hat{h}u_\\parallel \\\\[.5em]   \\frac{1}{2} \\left( \\Delta h + \\frac{\\hat{h}\\Delta u_\\perp}{\\hat{a}} \\right)   \\end{bmatrix} \\end{align}\\] \\[\\begin{eqnarray}   \\hat{h} &amp; = &amp; \\sqrt{h_i h_j} \\\\   \\hat{u} &amp; = &amp; \\frac{ \\sqrt{h_i} u_i + \\sqrt{h_j} u_j}{ \\sqrt{h_i} + \\sqrt{h_j}} \\\\   \\hat{v} &amp; = &amp; \\frac{ \\sqrt{h_i} v_i + \\sqrt{h_j} v_j}{ \\sqrt{h_i} + \\sqrt{h_j}} \\\\   \\hat{a} &amp; = &amp; \\sqrt{\\frac{g}{2} \\left( h_i + h_j \\right)} \\end{eqnarray}\\] \\[\\begin{align}   |\\mathbf{\\hat{\\Lambda}}|   =   \\begin{bmatrix}   | \\hat{u}_\\perp - \\hat{a} |^* &amp; 0 &amp; 0  \\\\[.5em]   0                                     &amp; |\\hat{u}_\\perp| &amp; 0 \\\\[.5em]     0                                     &amp;                         &amp; | \\hat{u}_\\perp + \\hat{a} |^*    \\end{bmatrix} \\end{align}\\] <p>The asterisks denote that the eigenvalues  \\(\\hat{\\lambda}_1 (= \\hat{u}_\\perp - \\hat{a} )\\) and \\(\\hat{\\lambda}_3 (= \\hat{u}_\\perp + \\hat{a})\\)  are adjusted since Roe's method does not provide correct flux for critical flow.</p> \\[\\begin{eqnarray}   |\\hat{\\lambda}|_1 &amp;=&amp; \\frac{\\hat{\\lambda}^2_1}{\\Delta \\lambda} + \\frac{\\Delta \\lambda}{4} \\mbox{$~$ if $~ -\\Delta \\lambda/2 &lt; \\hat{\\lambda}_1 &lt; \\Delta \\lambda/2$} \\\\   |\\hat{\\lambda}|_3 &amp;=&amp; \\frac{\\hat{\\lambda}^2_2}{\\Delta \\lambda} + \\frac{\\Delta \\lambda}{4} \\mbox{$~$ if $~ -\\Delta \\lambda/2 &lt; \\hat{\\lambda}_3 &lt; \\Delta \\lambda/2$} \\end{eqnarray}\\]"},{"location":"shallow_water_equation/#source-term","title":"Source term","text":"<p>The source term for the x-momentum equation</p> \\[\\begin{eqnarray} \\int_{d\\Omega} \\mathbf{S} d\\Omega &amp;=&amp; \\int_{\\Omega} \\left( -gh\\frac{\\partial z}{\\partial x} - C_D u \\sqrt{u^2 + v^2} \\right) d\\Omega \\nonumber \\\\ &amp;=&amp; \\int_{d\\Omega}  -gh\\frac{\\partial z}{\\partial x} d\\Omega - \\int_{\\Omega} C_D u \\sqrt{u^2 + v^2}  d\\Omega  \\end{eqnarray}\\]"},{"location":"shallow_water_equation/#bed-slope-elevation-term","title":"Bed slope elevation term","text":"\\[\\begin{equation} \\int_{d\\Omega}  -gh\\frac{\\partial z}{\\partial x} d\\Omega \\approx -gh\\overline{\\frac{\\partial z}{\\partial x}} \\Omega \\end{equation}\\] <p>For a triangular grid cell</p> \\[\\begin{equation} \\overline{\\frac{\\partial z}{\\partial x}}  = \\frac{(y_2 - y_0)(z_1 - z_0) - (y_1 - y_0)(z_2 - z_0)}{(y_2 - y_0)(x_1 - x_0) - (y_1 - y_0)(x_2 - x_0)} \\end{equation}\\]"},{"location":"shallow_water_equation/#roughness-term","title":"Roughness term","text":"\\[\\begin{eqnarray} \\int_{\\Omega} C_D u \\sqrt{u^2 + v^2}  d\\Omega  &amp;\\approx&amp; C_D u \\sqrt{u^2 + v^2} \\Omega \\end{eqnarray}\\]"},{"location":"shallow_water_equation/#petsc-ts-implementation","title":"PETSc TS implementation","text":"<p>The PETSc TS notation for solving time-dependent is given as:</p> \\[\\begin{equation} \\label{eqn:petsc_ts} \\mathtt{ F(t,u,{u}_t)=G(t,u)} \\end{equation}\\] <p>Comparing equation \\eqref{eqn:swe} and \\eqref{eqn:petsc_ts} provides</p> \\[\\begin{eqnarray} {\\mathtt{IFunction:  F(t,u,{u}_t)}  } &amp; \\equiv &amp; \\frac{\\partial \\mathbf{U}}{\\partial t} \\\\ {\\mathtt{RHSFunction:  G(t,u)}  } &amp; \\equiv &amp; -\\frac{\\partial\\mathbf{E}}{\\partial x} - \\frac{\\partial\\mathbf{G}}{\\partial x} - \\mathbf{S} \\end{eqnarray}\\]"},{"location":"shallow_water_equation/#swe_roeex1c","title":"<code>swe_roe/ex1.c</code>","text":"<p>The bed is assumed flat and Manning's coefficient is assumed to be zero, so \\(\\mathbf{S}\\) is not included.</p>"},{"location":"shallow_water_equation/#references","title":"References","text":"<p>Bradford, S. F., &amp; Sanders, B. F. (2002). Finite-volume model for shallow-water flooding of arbitrary topography. Journal of hydraulic engineering, 128(3), 289-298. https://ascelibrary.org/doi/10.1061/%28ASCE%290733-9429%282002%29128%3A3%28289%29</p> <p>Kim, J., Warnock, A., Ivanov, V. Y., &amp; Katopodes, N. D. (2012). Coupled modeling of hydrologic and hydrodynamic processes including overland and channel flow. Advances in water resources, 37, 104-126. https://www.sciencedirect.com/science/article/pii/S0309170811002211?via%3Dihub</p>"}]}